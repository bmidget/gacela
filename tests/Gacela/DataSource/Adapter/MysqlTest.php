<?php
namespace Gacela\DataSource\Adapter;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-09-22 at 16:53:00.
 */
class MysqlTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Mysql
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
		$this->object = new Mysql(
			array(
				'schema' => 'test',
				'host' => 'localhost',
				'password' => 'gacela',
				'user' => 'gacela',
				'type' => 'mysql'
			)
		);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

	public function providerInt()
	{
		return array
		(
			array('utiny',  0, 255, 3, true),
			array('tiny', -128, 127, 4, false),
			array('usmall',0, 65535, 5, true),
			array('small', -32768, 32767 , 6, false),
			array('umedium', 0, 16777215, 8, true),
			array('medium', -8388608, 8388607, 9, false),
			array('uint', 0, 4294967295, 10, true),
			array('int', -2147483648, 2147483647, 11, false),
			array('ubig', 0, 18446744073709551615, 20, true),
			array('big', -9223372036854775808, 9223372036854775807, 20, false)
		);
	}

	public function providerType()
	{
		return array(
			array('int', 'int'),
			array('integer', 'int'),
			array('tinyint', 'int'),
			array('smallint', 'int'),
			array('mediumint', 'int'),
			array('bigint', 'int'),
			array('bool', 'bool')
		);
	}

	/**
	 * @dataProvider providerType
	 * @param $name
	 * @param $type
	 */
	public function testLoadType($name, $type)
	{

	}

	/**
	 * @dataProvider providerInt
	 */
	public function testLoadInt($col, $min, $max, $length, $unsigned)
	{
		$meta = $this->object->load('ints', true);

		$column = $meta['columns'][$col];

		$this->assertEquals($min, $column->min);
		$this->assertEquals($max, $column->max);
		$this->assertEquals($length, $column->length);
		$this->assertEquals($unsigned, $column->unsigned);

		exit;
	}
}

